---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: provisioner
  namespace: kube-system
  labels:
    app-name: provisioner
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app-name: provisioner
  template:
    metadata:
      labels:
        app-name: provisioner
    spec:
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
      - effect: NoSchedule
        key: "node-role.kubernetes.io/control-plane"
        operator: Equal
      serviceAccount: provisioner
      serviceAccountName: provisioner
      containers:
      - name: k8s-objects
        image: warmachine0402/repo:k8s-git-sync-3.6.5-2
        args: ["--wait=20", "--repo=https://github.com/prdmarian/k8s.git", "--branch=main"]
        envFrom:
        - secretRef: { name: provisioner-cfg }
        volumeMounts:
        - { name: repo, mountPath: /tmp/git, subPath: k8s-objects }
      - name: provisioner
        image: warmachine0402/repo:docker-k8s-objects-provisioner-v2.2-k1.28
        imagePullPolicy: IfNotPresent
        env:
        - { name: DRY_RUN, value: "False" }
        volumeMounts:
        - { name: repo, mountPath: /opt/app/repo, subPath: k8s-objects }
        - { name: cache, mountPath: /opt/app/cache }
      - name: sidecar-prov
        image: warmachine0402/repo:docker-k8s-objects-provisioner-v2.2-k1.28
        command: ["python3", "./sidecar-prov.py"]
        imagePullPolicy: IfNotPresent
        env:
        - { name: DRY_RUN, value: "False" }
        volumeMounts:
        - { name: repo, mountPath: /opt/app/conf, subPath: sidecar-prov }
      volumes:
      - { name: repo, emptyDir: {} }
      - { name: cache, emptyDir: {} }

---
apiVersion: v1
kind: Secret
metadata:
  name: provisioner-cfg
  namespace: kube-system
type: Opaque
stringData:
  GIT_SYNC_DEST: repo
